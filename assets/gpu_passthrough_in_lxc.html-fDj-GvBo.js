import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,a}from"./app-ak9DDwC9.js";const t="/imgs/gpu_passthrough_in_lxc/1.png",l="/imgs/gpu_passthrough_in_lxc/2.png",n="/imgs/gpu_passthrough_in_lxc/3.png",h="/imgs/gpu_passthrough_in_lxc/4.png",d="/imgs/gpu_passthrough_in_lxc/5.png",r="/imgs/gpu_passthrough_in_lxc/6.png",p="/imgs/gpu_passthrough_in_lxc/7.png",k="/imgs/gpu_passthrough_in_lxc/8.png",o="/imgs/gpu_passthrough_in_lxc/9.png",g={},c=a('<h1 id="proxmoxve-gpu-直通-lxc-容器方案" tabindex="-1"><a class="header-anchor" href="#proxmoxve-gpu-直通-lxc-容器方案"><span>ProxmoxVE GPU 直通 LXC 容器方案</span></a></h1><p>GPU 直通已成为PVE下获取GPU性能的最佳方案，但独占模式使得GPU变得很局限；比如我有俩个VPS都需要使用GPU，那么加入俩张物理显卡进行分配</p><p>当然使用Proxmox VE(PVE)虚拟化的GPU可以通过以下几种方案来实现</p><ul><li>intel GVT-g</li><li>Nvida vGPU</li><li>GPU Passthrough</li><li>Docker-Nvidia</li></ul><p>相对来说还是比较灵活，当然每种方案都有利有弊这里会简要的总结一下特点:</p><table><thead><tr><th style="text-align:left;">方案</th><th style="text-align:left;">性能</th><th style="text-align:left;">运行模式</th><th style="text-align:left;">成本</th></tr></thead><tbody><tr><td style="text-align:left;">intel GVT-g</td><td style="text-align:left;">最低(intel集成显卡)</td><td style="text-align:left;">多台VPS可同时使用</td><td style="text-align:left;">低(随有核显CPU的得到)</td></tr><tr><td style="text-align:left;">Nvida vGPU</td><td style="text-align:left;">高(可控)</td><td style="text-align:left;">多台VPS可同时使用</td><td style="text-align:left;">昂贵且vGPU需商业授权</td></tr><tr><td style="text-align:left;">GPU Passthrough</td><td style="text-align:left;">高(视显卡型号)</td><td style="text-align:left;">独占1台VPS来使用</td><td style="text-align:left;">按需购买独立显卡</td></tr><tr><td style="text-align:left;">Docker-Nvidia</td><td style="text-align:left;">较高(视显卡型号)</td><td style="text-align:left;">宿主独占 多Docker同时使用</td><td style="text-align:left;">按需购买独立显卡</td></tr></tbody></table><p>同时还有一些细节问题需要是注意：</p><ul><li>intel GVT-g 技术有最大并发限制大约在1-4数量之间具体视CPU规格</li><li>Nvida vGPU 无数量限制 但商业授权按个数授权</li><li>GPU Passthrough 游戏显卡并发数限制为3个 专业图形卡和服务器卡则没有限制</li><li>Docker-Nvidia 和下面即将介绍的LXC 方案受限为物理卡限制</li></ul><p>可以通过查看 <a href="https://developer.nvidia.com/video-encode-decode-gpu-support-matrix" target="_blank" rel="noopener noreferrer">Nvidia NVDEC</a> 来获得大多数N卡的详细信息</p><blockquote><p>通过 Nvidia NVDEC信息表 得知我所需的环境性价比最好的应该是 P2200 所以我选择了它</p></blockquote><p>小规模团队、工作室、家庭、个人来说 一块放进服务器中的GPU当然希望他的性能能接近100%榨干；</p><p>当然还有微软平台的Hyper-V 也有不错的 GPU虚拟化方案，只是驱动兼容和配置修改较为复杂这里直接排除；</p><p>所以这里就出现了 直通GPU给LXC 容器的解决方案，这个方案的特点和<strong>Docker-Nvidia</strong> 类似，只是LXC容器的特性使得容器更接近VPS环境，配合 Proxmox VE(PVE) 可以说在大多数架构上来使用体验接近VPS环境了；</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="部署步骤" tabindex="-1"><a class="header-anchor" href="#部署步骤"><span>部署步骤</span></a></h2><h3 id="宿主机操作部分" tabindex="-1"><a class="header-anchor" href="#宿主机操作部分"><span>宿主机操作部分</span></a></h3><p>更新源参考这里 [[Proxmox VE 配置源及关闭订阅提醒]]</p><p>然后更新库。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dist-upgrade</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装header" tabindex="-1"><a class="header-anchor" href="#安装header"><span>安装header</span></a></h4><p>Proxmox VE(PVE) 有个命令可直接安装header 无需查询</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pve-headers</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用这个命令安装的下面步骤省略</p><p>如需手动查询安装： 通过<code>uname -a</code> 查询自己的内核。 然后，<code>apt-cache search pve-header</code> 查询跟自己内核版本一样的<code>header</code></p><p>注意这里说的是<code>pve-header</code> 而不是<code>linux-header</code> 然后 <code>apt install pve-headers-5.11.22-4-pve</code>这个是我的，PVE7下的具体要把 <code>install</code> 后面的内容换自己实际的版本号。</p><h4 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h4><p>安装一下驱动安装所需要的环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dkms</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后再确认一下，GPU插上了，并且能准确显示：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lspci</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您应该会看到如下输出：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">01:00.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> VGA</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compatible</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> controller:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NVIDIA</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Corporation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GP106GL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [Quadro </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">P2200]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rev </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">a1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">01:00.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Audio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> device:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NVIDIA</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Corporation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GP106</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> High</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Definition</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Audio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Controller</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rev </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">a1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装显卡驱动" tabindex="-1"><a class="header-anchor" href="#安装显卡驱动"><span>安装显卡驱动</span></a></h4><p>PVE7</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bullseye-backports</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia-driver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia-smi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>PVE6</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buster-backports</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia-driver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia-smi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加模块" tabindex="-1"><a class="header-anchor" href="#添加模块"><span>添加模块</span></a></h4><p>驱动无错安装之后，注意检查以下目录内容</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/modules-load.d/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我这里返回 3个文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modules-load.d/modules.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modules-load.d/qemu-server.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modules-load.d/nvidia.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看<code>cat /etc/modules-load.d/nvidia.conf</code>文件内容：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvidia-drm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>向<code>nvidia.conf</code>中添加模块，确保文件内容如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvidia-drm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvidia</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvidia_uvm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><ul><li>因PVE版本和驱动差异 注意检查<code>/etc/modules-load.d/</code> 每一个文件内容，保证添加的模块不能少，也不能重复；</li><li>如果没有<code>nvidia.conf</code> 则吧上面的内容添加到<code>/etc/modules-load.d/modules.conf </code>文件中</li></ul><h4 id="屏蔽不兼容驱动" tabindex="-1"><a class="header-anchor" href="#屏蔽不兼容驱动"><span>屏蔽不兼容驱动</span></a></h4><p>查看目录</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/modprobe.d/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>返回</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modprobe.d/dkms.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modprobe.d/nvidia-kernel-common.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modprobe.d/nvidia-blacklists-nouveau.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modprobe.d/pve-blacklist.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/etc/modprobe.d/nvidia.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查 <code>cat /etc/modprobe.d/nvidia-blacklists-nouveau.conf </code> 和 <code>/etc/modprobe.d/pve-blacklist.conf</code> 文件确保里面内容包含</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">blacklist</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nouveau</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">blacklist</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidiafb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>保证内容没有被注释 同时 也<strong>不能重复</strong></p><h4 id="更新模块" tabindex="-1"><a class="header-anchor" href="#更新模块"><span>更新模块</span></a></h4><p>UEFI模式安装的PVE使用命令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update-initramfs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>兼容模式或传统模式安装的使用：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update-grub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>没把握的俩个都运行一下</p><h4 id="创建规则" tabindex="-1"><a class="header-anchor" href="#创建规则"><span>创建规则</span></a></h4><p>创建一个文件 <code>nano /etc/udev/rules.d/70-nvidia.rules</code>并填充：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Create /nvidia0, /dev/nvidia1 … and /nvidiactl when nvidia module is loaded</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KERNEL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=&quot;nvidia&quot;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/bin/bash -c &#39;/usr/bin/nvidia-smi -L &amp;&amp; /bin/chmod 666 /dev/nvidia*&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Create the CUDA node when nvidia_uvm CUDA module is loaded</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KERNEL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=&quot;nvidia_uvm&quot;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/bin/bash -c &#39;/usr/bin/nvidia-modprobe -c0 -u &amp;&amp; /bin/chmod 0666 /dev/nvidia-uvm*&#39;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些规则作用：</p><ul><li>设置更宽松的权限</li><li>启用默认情况下未启动的 nvidia_uvm（至少对于我的卡而言）</li></ul><h4 id="重启" tabindex="-1"><a class="header-anchor" href="#重启"><span>重启</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reboot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>期待一个没有报错、没有宕机、没有BUG的醒来</p><h4 id="检查" tabindex="-1"><a class="header-anchor" href="#检查"><span>检查</span></a></h4><p>重新启动主机，并检查的输出<code>ls -al /dev/nvidia*</code>，并<code>ls -al /dev/dri/*</code>为类似下面：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw-rw-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 195,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 18:11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw-rw-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 195,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 255</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 18:11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidiactl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw-rw-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 195,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 254</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 18:11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-modeset</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw-rw-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 236,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 18:11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-uvm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw-rw-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 236,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 18:11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-uvm-tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw----</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> video</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 226,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:43</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/dri/card0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw----</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> video</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 226,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:43</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/dri/card1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crw-rw----</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> render</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 226,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 128</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> May</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:43</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/dri/renderD128</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记下号码的第五列以上<code>195</code>，<code>236</code>并<code>226</code>分别。这些是之后LXC中需要的。 <strong>注意：</strong> 上述设备缺一不可至少包含：nvidia0、nvidiactl、nvidia-modeset、vidia-uvm、nvidia-uvm-tools； 少了说明驱动有组件没有安装成功，请详细检查；</p><p>此外，您可以使用<code>nvidia-smi</code>应该显示类似内容的命令检查 nvidia 卡是否正在工作</p><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="lxc操作部分" tabindex="-1"><a class="header-anchor" href="#lxc操作部分"><span>LXC操作部分</span></a></h3><p>接下来，我们需要在容器内安装 Nvidia 驱动程序。Proxmox 主机和容器之间的确切 Nvidia 驱动程序版本匹配非常重要！</p><p>Debian(ProxmoxVE) 使用较旧的 Nvidia 驱动程序<code>460.91.03</code>，因此我必须在我的 LXC Linux 容器中也需要手动安装 对应版本的Nvidia 驱动程序。</p><h4 id="下载驱动程序" tabindex="-1"><a class="header-anchor" href="#下载驱动程序"><span>下载驱动程序</span></a></h4><p>LXC开机，进入LXC中 下载驱动程序 <strong>注意：LXC容器只能为 非特权容器</strong> 直接穷举出URL：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://us.download.nvidia.com/XFree86/Linux-x86_64/460.91.03/NVIDIA-Linux-x86_64-460.91.03.run</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在没有内核模块的情况下执行安装：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NVIDIA-Linux-x86_64-460.91.03.run</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  NVIDIA-Linux-x86_64-460.91.03.run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-kernel-module</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装成功无报错就关闭LXC</p><h5 id="修改lxc配置文件" tabindex="-1"><a class="header-anchor" href="#修改lxc配置文件"><span>修改LXC配置文件</span></a></h5><p>宿主机进入<code>/etc/pve/lxc/</code> 找到对应LXC的ID配置文件nano打开 在最后一行加入一下内容：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.cgroup.devices.allow:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 195:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rwm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.cgroup.devices.allow:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 236:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rwm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.cgroup.devices.allow:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 226:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rwm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/nvidia0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidiactl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/nvidiactl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-uvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/nvidia-uvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-modeset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/nvidia-modeset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/nvidia-uvm-tools</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/nvidia-uvm-tools</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lxc.mount.entry:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/dri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev/dri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bind,optional,create=dir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>195</code>，<code>236</code>和<code>226</code> 数字是上面记录的，注意按实际更换填写</p><p>修改好保存，开机 登陆LXC 输入命令 <code>nvidia-smi</code> 返回</p><figure><img src="`+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="应用实例" tabindex="-1"><a class="header-anchor" href="#应用实例"><span>应用实例</span></a></h2><h3 id="lxc-gpu容器中安装emby" tabindex="-1"><a class="header-anchor" href="#lxc-gpu容器中安装emby"><span>LXC GPU容器中安装Emby</span></a></h3><p>LXC GPU直通的特性，LXC容器只能为 非特权容器直通 如果是特权容器启动 运行 <code>nvidia-smi</code>会返回</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> initialize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NVML:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unknown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Error</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个特性问题无解，官方无解、Hack无解； 同时，又因为<strong>非特权容器</strong> 的特性，无法从容器中使用 <strong>SMB/CIFS</strong> <strong>NFS</strong> 协议来链接外部存储。</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用以上架构的各位极客，多半存储位于外部NAS中的分布式；所以这里还需解决媒体目录挂载到LXC容器中问题，值得庆幸的是PromoxVE(PVE) 在WebUI中给予了大家一个非常有用的目录挂载功能，下面就来一一部署。</p><h4 id="下载emby安装文件" tabindex="-1"><a class="header-anchor" href="#下载emby安装文件"><span>下载emby安装文件</span></a></h4><p><a href="https://emby.media/linux-server.html" target="_blank" rel="noopener noreferrer">官方下载地址</a></p><h4 id="安装emby-server" tabindex="-1"><a class="header-anchor" href="#安装emby-server"><span>安装emby server</span></a></h4><p>例 下载的文件为<code>emby-server-deb_4.6.4.0_amd64.deb</code> 先授执行权限</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emby-server-deb_4.6.4.0_amd64.deb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后执行安装</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dpkg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emby-server-deb_4.6.4.0_amd64.deb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="设置emby" tabindex="-1"><a class="header-anchor" href="#设置emby"><span>设置emby</span></a></h4><p>打开浏览器 <code>http://localhost:8096</code> 执行设置； 设置过程略过，注意其中设置媒体库的时候跳过 不设置。</p><h4 id="设置转码" tabindex="-1"><a class="header-anchor" href="#设置转码"><span>设置转码</span></a></h4><p>安装初始设置后，进入管理后台：转码 - 启用硬件加速 -开启</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此步骤 主要是校验LXC容器中的GPU</p><h4 id="解决nas挂载" tabindex="-1"><a class="header-anchor" href="#解决nas挂载"><span>解决NAS挂载</span></a></h4><p>这步最为重要，按照目前的 LXC/LXD 容器技术来看，要在非特权容器中直接解决这个问题是没有办法的，各位极客如果时间宝贵就不要尝试了，当然折腾精神永不灭，如果你在非特权容器中找到直接挂载<code>SMB/CIFS</code>的方法 请务必分享一下。</p><blockquote><p>这里分享一下折腾案例，非特权容器中使用 <code>smbclient</code> 是可以访问到 NAS 的，这里会造成错觉。这并不意味着<code>mount -t cifs</code> or <code>mount.cifs</code> 能正确挂载</p></blockquote><p>所以就是如此的无奈，非特权才能&quot;vGPU&quot;。 特权才能<code>SMB/CIFS</code></p><p>好在还有一个办法能非常巧妙的平衡这个不足，思路为：</p><p><strong>Proxmox VE(PVE)宿主机挂载NAS目录</strong> - <strong>LXC 非特权容器挂载宿主机中目录</strong></p><p>说到这里可能意识了到了<strong>LXC 非特权容器挂载宿主机中目录</strong> 为 上一步<strong>Proxmox VE(PVE)宿主机挂载NAS的目录</strong></p><p>接下来实践： 打开 WebUI 定位到 <strong>数据中心-存储-添加-SMB/CIFS</strong></p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加一个存储</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th style="text-align:left;">选项</th><th style="text-align:left;">值</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">ID</td><td style="text-align:left;">video-nas</td><td style="text-align:left;">SMB/CIFS的ID 这个名称会作为宿主机内文件夹名称</td></tr><tr><td style="text-align:left;">服务器</td><td style="text-align:left;">10.10.200.50</td><td style="text-align:left;">NAS的内网IP地址</td></tr><tr><td style="text-align:left;">用户名</td><td style="text-align:left;">movide</td><td style="text-align:left;">NAS共享目录的用户</td></tr><tr><td style="text-align:left;">密码</td><td style="text-align:left;">************</td><td style="text-align:left;">NAS共享目录的密码</td></tr></tbody></table><p>填写完上面的信息之后 <strong>Share</strong> 选项才能被激活，打开<strong>Share</strong>选项里面就是NAS的目录</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>除了 服务器、用户名、密码、Share 4个选项 其余配置可以参考我的设置，其中<strong>启用</strong> 是关闭的，这个操作主要为了不让这个目录显示在ProxmoxVE WebGUI中，就不显的那么凌乱了</p><p>确定配置无误即可 添加</p><p>添加之后可以通过 路径/目标 获得NAS目录在宿主机中挂载位置，并记录下它 例如我的是<code> /mnt/pve/video-nas</code></p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后关闭正在运行的LXC，然后只需要用下面的命令挂载这个目录到GPU LXC中：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pct set 100 -mp0 /mnt/pve/video-nas,mp=/video</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令解释：挂载宿主机目录<code>/mnt/pve/video-nas</code>到 ID为100 LXC容器中的<code>/video</code>目录下</p><h4 id="目录权限" tabindex="-1"><a class="header-anchor" href="#目录权限"><span>目录权限</span></a></h4><p><strong>问题一：</strong> 可能会遇到 LXC 容器中 <code>/video</code>目录只能读取不能写入的问题，需要从一下几点进行尝试：</p><h5 id="_1-nas-账号权限" tabindex="-1"><a class="header-anchor" href="#_1-nas-账号权限"><span>1. NAS 账号权限</span></a></h5><p>NAS账号是否已经对共享目录给予了读写权限</p><h5 id="_2-宿主机目录权限" tabindex="-1"><a class="header-anchor" href="#_2-宿主机目录权限"><span>2. 宿主机目录权限</span></a></h5><p>可以尝试 使用命令来修复权限</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 755</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /mnt/pve/video-nas</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="_4-lxc目录权限" tabindex="-1"><a class="header-anchor" href="#_4-lxc目录权限"><span>4. LXC目录权限</span></a></h5><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 755</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /video</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>问题二：</strong> emby server对挂载来的目录没有写入权限</p><h5 id="_4-lxc-目录权限" tabindex="-1"><a class="header-anchor" href="#_4-lxc-目录权限"><span>4. LXC 目录权限</span></a></h5><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emby:emby</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /video</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="lxc-gpu容器中安装plex" tabindex="-1"><a class="header-anchor" href="#lxc-gpu容器中安装plex"><span>LXC GPU容器中安装Plex</span></a></h3><p>方法请类推，基本一致</p><h3 id="lxc-gpu容器中安装jellyfin" tabindex="-1"><a class="header-anchor" href="#lxc-gpu容器中安装jellyfin"><span>LXC GPU容器中安装Jellyfin</span></a></h3><p>方法请类推，基本一致</p><p>参考资料：</p><p><a href="https://passbe.com/2020/02/19/gpu-nvidia-passthrough-on-proxmox-lxc-container/" target="_blank" rel="noopener noreferrer">GPU (Nvidia) passthrough on Proxmox LXC container</a></p><p><a href="https://theorangeone.net/posts/lxc-nvidia-gpu-passthrough/" target="_blank" rel="noopener noreferrer">Nvidia GPU passthrough in LXC</a></p><p><a href="https://www.bilibili.com/read/cv13181675" target="_blank" rel="noopener noreferrer">【亿点笔记】Proxmox VE(PVE) 下直通GPU给LXC 进行CUDA coding</a></p><br><blockquote><p>本文转载自：<a href="https://www.insilen.com/archives/17.html" target="_blank" rel="noopener noreferrer">https://www.insilen.com/archives/17.html</a></p></blockquote>',154),v=[c];function u(y,m){return e(),s("div",null,v)}const A=i(g,[["render",u],["__file","gpu_passthrough_in_lxc.html.vue"]]),x=JSON.parse(`{"path":"/posts/gpu_passthrough_in_lxc.html","title":"ProxmoxVE GPU 直通 LXC 容器方案","lang":"zh-CN","frontmatter":{"isOriginal":false,"date":"2023-08-30T00:00:00.000Z","author":"Zimri","category":"服务器虚拟化","tag":["ProxmoxVE","GPU虚拟化"],"cover":"/imgs/gpu_passthrough_in_lxc/0121131913.jpg","description":"ProxmoxVE GPU 直通 LXC 容器方案 GPU 直通已成为PVE下获取GPU性能的最佳方案，但独占模式使得GPU变得很局限；比如我有俩个VPS都需要使用GPU，那么加入俩张物理显卡进行分配 当然使用Proxmox VE(PVE)虚拟化的GPU可以通过以下几种方案来实现 intel GVT-g Nvida vGPU GPU Passthrou...","head":[["meta",{"property":"og:url","content":"https://okeen.top/posts/gpu_passthrough_in_lxc.html"}],["meta",{"property":"og:site_name","content":"Keen's Blog"}],["meta",{"property":"og:title","content":"ProxmoxVE GPU 直通 LXC 容器方案"}],["meta",{"property":"og:description","content":"ProxmoxVE GPU 直通 LXC 容器方案 GPU 直通已成为PVE下获取GPU性能的最佳方案，但独占模式使得GPU变得很局限；比如我有俩个VPS都需要使用GPU，那么加入俩张物理显卡进行分配 当然使用Proxmox VE(PVE)虚拟化的GPU可以通过以下几种方案来实现 intel GVT-g Nvida vGPU GPU Passthrou..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://okeen.top/imgs/gpu_passthrough_in_lxc/0121131913.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-06T07:18:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://okeen.top/imgs/gpu_passthrough_in_lxc/0121131913.jpg"}],["meta",{"name":"twitter:image:alt","content":"ProxmoxVE GPU 直通 LXC 容器方案"}],["meta",{"property":"article:author","content":"Zimri"}],["meta",{"property":"article:tag","content":"ProxmoxVE"}],["meta",{"property":"article:tag","content":"GPU虚拟化"}],["meta",{"property":"article:published_time","content":"2023-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-06T07:18:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ProxmoxVE GPU 直通 LXC 容器方案\\",\\"image\\":[\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/1.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/2.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/3.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/4.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/5.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/6.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/7.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/8.png\\",\\"https://okeen.top/imgs/gpu_passthrough_in_lxc/9.png\\"],\\"datePublished\\":\\"2023-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-06T07:18:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zimri\\"}]}"]]},"headers":[{"level":2,"title":"部署步骤","slug":"部署步骤","link":"#部署步骤","children":[{"level":3,"title":"宿主机操作部分","slug":"宿主机操作部分","link":"#宿主机操作部分","children":[]},{"level":3,"title":"LXC操作部分","slug":"lxc操作部分","link":"#lxc操作部分","children":[]}]},{"level":2,"title":"应用实例","slug":"应用实例","link":"#应用实例","children":[{"level":3,"title":"LXC GPU容器中安装Emby","slug":"lxc-gpu容器中安装emby","link":"#lxc-gpu容器中安装emby","children":[]},{"level":3,"title":"LXC GPU容器中安装Plex","slug":"lxc-gpu容器中安装plex","link":"#lxc-gpu容器中安装plex","children":[]},{"level":3,"title":"LXC GPU容器中安装Jellyfin","slug":"lxc-gpu容器中安装jellyfin","link":"#lxc-gpu容器中安装jellyfin","children":[]}]}],"git":{"createdTime":1722928732000,"updatedTime":1722928732000,"contributors":[{"name":"Keen","email":"keenchen63@outlook.com","commits":1}]},"readingTime":{"minutes":9.72,"words":2917},"filePathRelative":"posts/gpu_passthrough_in_lxc.md","localizedDate":"2023年8月30日","excerpt":"\\n<p>GPU 直通已成为PVE下获取GPU性能的最佳方案，但独占模式使得GPU变得很局限；比如我有俩个VPS都需要使用GPU，那么加入俩张物理显卡进行分配</p>\\n<p>当然使用Proxmox VE(PVE)虚拟化的GPU可以通过以下几种方案来实现</p>\\n<ul>\\n<li>intel GVT-g</li>\\n<li>Nvida vGPU</li>\\n<li>GPU Passthrough</li>\\n<li>Docker-Nvidia</li>\\n</ul>\\n<p>相对来说还是比较灵活，当然每种方案都有利有弊这里会简要的总结一下特点:</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">方案</th>\\n<th style=\\"text-align:left\\">性能</th>\\n<th style=\\"text-align:left\\">运行模式</th>\\n<th style=\\"text-align:left\\">成本</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">intel GVT-g</td>\\n<td style=\\"text-align:left\\">最低(intel集成显卡)</td>\\n<td style=\\"text-align:left\\">多台VPS可同时使用</td>\\n<td style=\\"text-align:left\\">低(随有核显CPU的得到)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">Nvida vGPU</td>\\n<td style=\\"text-align:left\\">高(可控)</td>\\n<td style=\\"text-align:left\\">多台VPS可同时使用</td>\\n<td style=\\"text-align:left\\">昂贵且vGPU需商业授权</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">GPU Passthrough</td>\\n<td style=\\"text-align:left\\">高(视显卡型号)</td>\\n<td style=\\"text-align:left\\">独占1台VPS来使用</td>\\n<td style=\\"text-align:left\\">按需购买独立显卡</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">Docker-Nvidia</td>\\n<td style=\\"text-align:left\\">较高(视显卡型号)</td>\\n<td style=\\"text-align:left\\">宿主独占 多Docker同时使用</td>\\n<td style=\\"text-align:left\\">按需购买独立显卡</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}`);export{A as comp,x as data};
